<?xml version="1.0" encoding="ascii"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
          "DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
  <title>example_scripts.peakRetrieval</title>
  <link rel="stylesheet" href="epydoc.css" type="text/css" />
  <script type="text/javascript" src="epydoc.js"></script>
</head>

<body bgcolor="white" text="black" link="blue" vlink="#204080"
      alink="#204080">
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table width="100%" cellpadding="0" cellspacing="0">
  <tr valign="top">
    <td width="100%">
      <span class="breadcrumbs">
        <a href="example_scripts-module.html">Package&nbsp;example_scripts</a> ::
        Module&nbsp;peakRetrieval
      </span>
    </td>
    <td>
      <table cellpadding="0" cellspacing="0">
        <!-- hide/show private -->
        <tr><td align="right"><span class="options">[<a href="javascript:void(0);" class="privatelink"
    onclick="toggle_private();">hide&nbsp;private</a>]</span></td></tr>
        <tr><td align="right"><span class="options"
            >[<a href="frames.html" target="_top">frames</a
            >]&nbsp;|&nbsp;<a href="example_scripts.peakRetrieval-pysrc.html"
            target="_top">no&nbsp;frames</a>]</span></td></tr>
      </table>
    </td>
  </tr>
</table>
<h1 class="epydoc">Source Code for <a href="example_scripts.peakRetrieval-module.html">Module example_scripts.peakRetrieval</a></h1>
<pre class="py-src">
<a name="L1"></a><tt class="py-lineno"> 1</tt>  <tt class="py-line"> </tt>
<a name="L2"></a><tt class="py-lineno"> 2</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L3"></a><tt class="py-lineno"> 3</tt>  <tt class="py-line"><tt class="py-docstring">Example how to extract peaks between a certain m/z value and plot a chromatochram of their m/z - rt value</tt> </tt>
<a name="L4"></a><tt class="py-lineno"> 4</tt>  <tt class="py-line"><tt class="py-docstring">"""</tt> </tt>
<a name="L5"></a><tt class="py-lineno"> 5</tt>  <tt class="py-line"><tt class="py-comment"># author: ndeklein</tt> </tt>
<a name="L6"></a><tt class="py-lineno"> 6</tt>  <tt class="py-line"><tt class="py-comment"># date:28/03/2012</tt> </tt>
<a name="L7"></a><tt class="py-lineno"> 7</tt>  <tt class="py-line"><tt class="py-comment"># summary: Example how to extract peaks between a certain m/z value and plot a chromatochram of their m/z - rt value</tt> </tt>
<a name="L8"></a><tt class="py-lineno"> 8</tt>  <tt class="py-line"> </tt>
<a name="L9"></a><tt class="py-lineno"> 9</tt>  <tt class="py-line"><tt class="py-comment"># to be able to import pyMS and without making a package (because info changes everytime during development, don't want to make a new</tt> </tt>
<a name="L10"></a><tt class="py-lineno">10</tt>  <tt class="py-line"><tt class="py-comment"># package everytime) </tt> </tt>
<a name="L11"></a><tt class="py-lineno">11</tt>  <tt class="py-line"><tt class="py-keyword">import</tt> <tt class="py-name">sys</tt> </tt>
<a name="L12"></a><tt class="py-lineno">12</tt>  <tt class="py-line"> </tt>
<a name="L13"></a><tt class="py-lineno">13</tt>  <tt class="py-line"><tt class="py-comment"># for me, PyMS_dev is not in my default python path</tt> </tt>
<a name="L14"></a><tt class="py-lineno">14</tt>  <tt class="py-line"><tt class="py-keyword">try</tt><tt class="py-op">:</tt> </tt>
<a name="L15"></a><tt class="py-lineno">15</tt>  <tt class="py-line">    <tt class="py-name">sys</tt><tt class="py-op">.</tt><tt class="py-name">path</tt><tt class="py-op">.</tt><tt class="py-name">append</tt><tt class="py-op">(</tt><tt class="py-string">'/homes/ndeklein/workspace/MS/Trunk/PyMS_dev'</tt><tt class="py-op">)</tt> </tt>
<a name="L16"></a><tt class="py-lineno">16</tt>  <tt class="py-line"><tt class="py-keyword">except</tt><tt class="py-op">:</tt> </tt>
<a name="L17"></a><tt class="py-lineno">17</tt>  <tt class="py-line">    <tt class="py-keyword">pass</tt> </tt>
<a name="L18"></a><tt class="py-lineno">18</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-0" class="py-name" targets="Package pyMS=pyMS-module.html"><a title="pyMS" class="py-name" href="#" onclick="return doclink('link-0', 'pyMS', 'link-0');">pyMS</a></tt> <tt class="py-keyword">import</tt> <tt id="link-1" class="py-name" targets="Module pyMS.parsePeaksMzML=pyMS.parsePeaksMzML-module.html"><a title="pyMS.parsePeaksMzML" class="py-name" href="#" onclick="return doclink('link-1', 'parsePeaksMzML', 'link-1');">parsePeaksMzML</a></tt> </tt>
<a name="L19"></a><tt class="py-lineno">19</tt>  <tt class="py-line"><tt class="py-keyword">from</tt> <tt id="link-2" class="py-name"><a title="pyMS" class="py-name" href="#" onclick="return doclink('link-2', 'pyMS', 'link-0');">pyMS</a></tt> <tt class="py-keyword">import</tt> <tt id="link-3" class="py-name" targets="Module pyMS.getWindow=pyMS.getWindow-module.html"><a title="pyMS.getWindow" class="py-name" href="#" onclick="return doclink('link-3', 'getWindow', 'link-3');">getWindow</a></tt> </tt>
<a name="L20"></a><tt class="py-lineno">20</tt>  <tt class="py-line"> </tt>
<a name="mz_rt_plot"></a><div id="mz_rt_plot-def"><a name="L21"></a><tt class="py-lineno">21</tt> <a class="py-toggle" href="#" id="mz_rt_plot-toggle" onclick="return toggle('mz_rt_plot');">-</a><tt class="py-line"><tt class="py-keyword">def</tt> <a class="py-def-name" href="example_scripts.peakRetrieval-module.html#mz_rt_plot">mz_rt_plot</a><tt class="py-op">(</tt><tt class="py-op">)</tt><tt class="py-op">:</tt> </tt>
</div><div id="mz_rt_plot-collapsed" style="display:none;" pad="++" indent="++++"></div><div id="mz_rt_plot-expanded"><a name="L22"></a><tt class="py-lineno">22</tt>  <tt class="py-line">    <tt class="py-docstring">"""</tt> </tt>
<a name="L23"></a><tt class="py-lineno">23</tt>  <tt class="py-line"><tt class="py-docstring">    Example of how to plot the m/z values against the retention time by selecting features from a window of m/z values.</tt> </tt>
<a name="L24"></a><tt class="py-lineno">24</tt>  <tt class="py-line"><tt class="py-docstring">    </tt> </tt>
<a name="L25"></a><tt class="py-lineno">25</tt>  <tt class="py-line"><tt class="py-docstring">    </tt> </tt>
<a name="L26"></a><tt class="py-lineno">26</tt>  <tt class="py-line"><tt class="py-docstring">    This example script uses the following classes and functions:</tt> </tt>
<a name="L27"></a><tt class="py-lineno">27</tt>  <tt class="py-line"><tt class="py-docstring">      - L{parsePeaksMzML.Reader}</tt> </tt>
<a name="L28"></a><tt class="py-lineno">28</tt>  <tt class="py-line"><tt class="py-docstring">      - L{getWindow.PeakLocation}</tt> </tt>
<a name="L29"></a><tt class="py-lineno">29</tt>  <tt class="py-line"><tt class="py-docstring">      - L{getWindow.PeakLocation.getPeaks_mzWindow}</tt> </tt>
<a name="L30"></a><tt class="py-lineno">30</tt>  <tt class="py-line"><tt class="py-docstring"></tt> </tt>
<a name="L31"></a><tt class="py-lineno">31</tt>  <tt class="py-line"><tt class="py-docstring">    </tt> </tt>
<a name="L32"></a><tt class="py-lineno">32</tt>  <tt class="py-line"><tt class="py-docstring">    B{Example (See the comments in the source code for detailed information on all the steps.):}</tt> </tt>
<a name="L33"></a><tt class="py-lineno">33</tt>  <tt class="py-line"><tt class="py-docstring">    </tt> </tt>
<a name="L34"></a><tt class="py-lineno">34</tt>  <tt class="py-line"><tt class="py-docstring">    &gt;&gt;&gt; from pyMS import parsePeaksMzML</tt> </tt>
<a name="L35"></a><tt class="py-lineno">35</tt>  <tt class="py-line"><tt class="py-docstring">    &gt;&gt;&gt; from pyMS import getWindow</tt> </tt>
<a name="L36"></a><tt class="py-lineno">36</tt>  <tt class="py-line"><tt class="py-docstring">    &gt;&gt;&gt; peaks = parsePeaksMzML.Reader('example_peak_file.peaks.mzML')                # read in the peaks file and make an instance of parsePeaksMzML.Reader class</tt> </tt>
<a name="L37"></a><tt class="py-lineno">37</tt>  <tt class="py-line"><tt class="py-docstring">    &gt;&gt;&gt; peakLocation = getWindow.PeakLocation(peaks)                                 # make an instance of getWindow.PeakLocation using the parsePeaksMzML.Reader instance as input</tt> </tt>
<a name="L38"></a><tt class="py-lineno">38</tt>  <tt class="py-line"><tt class="py-docstring">    &gt;&gt;&gt; peakList = peakLocation.getPeaks_mzWindow(300,500)                           # get a list of peaks that have an m/z value between (including) 300-500</tt> </tt>
<a name="L39"></a><tt class="py-lineno">39</tt>  <tt class="py-line"><tt class="py-docstring">    </tt> </tt>
<a name="L40"></a><tt class="py-lineno">40</tt>  <tt class="py-line"><tt class="py-docstring">    """</tt> </tt>
<a name="L41"></a><tt class="py-lineno">41</tt>  <tt class="py-line">     </tt>
<a name="L42"></a><tt class="py-lineno">42</tt>  <tt class="py-line">    <tt class="py-name">peaks</tt> <tt class="py-op">=</tt> <tt id="link-4" class="py-name"><a title="pyMS.parsePeaksMzML" class="py-name" href="#" onclick="return doclink('link-4', 'parsePeaksMzML', 'link-1');">parsePeaksMzML</a></tt><tt class="py-op">.</tt><tt id="link-5" class="py-name" targets="Class pyMS.parseFeatureXML.Reader=pyMS.parseFeatureXML.Reader-class.html,Class pyMS.parsePeaksMzML.Reader=pyMS.parsePeaksMzML.Reader-class.html"><a title="pyMS.parseFeatureXML.Reader
pyMS.parsePeaksMzML.Reader" class="py-name" href="#" onclick="return doclink('link-5', 'Reader', 'link-5');">Reader</a></tt><tt class="py-op">(</tt><tt class="py-string">'example_peak_file.peaks.mzML'</tt><tt class="py-op">)</tt> </tt>
<a name="L43"></a><tt class="py-lineno">43</tt>  <tt class="py-line">    <tt class="py-name">peakLocation</tt> <tt class="py-op">=</tt> <tt id="link-6" class="py-name"><a title="pyMS.getWindow" class="py-name" href="#" onclick="return doclink('link-6', 'getWindow', 'link-3');">getWindow</a></tt><tt class="py-op">.</tt><tt id="link-7" class="py-name" targets="Class pyMS.getWindow.PeakLocation=pyMS.getWindow.PeakLocation-class.html"><a title="pyMS.getWindow.PeakLocation" class="py-name" href="#" onclick="return doclink('link-7', 'PeakLocation', 'link-7');">PeakLocation</a></tt><tt class="py-op">(</tt><tt class="py-name">peaks</tt><tt class="py-op">)</tt> </tt>
<a name="L44"></a><tt class="py-lineno">44</tt>  <tt class="py-line">    <tt class="py-name">peakList</tt> <tt class="py-op">=</tt> <tt class="py-name">peakLocation</tt><tt class="py-op">.</tt><tt id="link-8" class="py-name" targets="Method pyMS.getWindow.PeakLocation.getPeaks_mzWindow()=pyMS.getWindow.PeakLocation-class.html#getPeaks_mzWindow"><a title="pyMS.getWindow.PeakLocation.getPeaks_mzWindow" class="py-name" href="#" onclick="return doclink('link-8', 'getPeaks_mzWindow', 'link-8');">getPeaks_mzWindow</a></tt><tt class="py-op">(</tt><tt class="py-number">350</tt><tt class="py-op">,</tt><tt class="py-number">500</tt><tt class="py-op">)</tt> </tt>
<a name="L45"></a><tt class="py-lineno">45</tt>  <tt class="py-line">    <tt class="py-keyword">for</tt> <tt class="py-name">peak</tt> <tt class="py-keyword">in</tt> <tt class="py-name">peakList</tt><tt class="py-op">:</tt> </tt>
<a name="L46"></a><tt class="py-lineno">46</tt>  <tt class="py-line">        <tt class="py-keyword">print</tt> <tt class="py-name">peak</tt> </tt>
</div><a name="L47"></a><tt class="py-lineno">47</tt>  <tt class="py-line"> </tt><script type="text/javascript">
<!--
expandto(location.href);
// -->
</script>
</pre>
<br />
<!-- ==================== NAVIGATION BAR ==================== -->
<table class="navbar" border="0" width="100%" cellpadding="0"
       bgcolor="#a0c0ff" cellspacing="0">
  <tr valign="middle">

  <!-- Tree link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="module-tree.html">Trees</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Index link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="identifier-index.html">Indices</a>&nbsp;&nbsp;&nbsp;</th>

  <!-- Help link -->
      <th>&nbsp;&nbsp;&nbsp;<a
        href="help.html">Help</a>&nbsp;&nbsp;&nbsp;</th>

      <th class="navbar" width="100%"></th>
  </tr>
</table>
<table border="0" cellpadding="0" cellspacing="0" width="100%%">
  <tr>
    <td align="left" class="footer">
    Generated by Epydoc 3.0.1 on Wed Mar 28 10:46:05 2012
    </td>
    <td align="right" class="footer">
      <a target="mainFrame" href="http://epydoc.sourceforge.net"
        >http://epydoc.sourceforge.net</a>
    </td>
  </tr>
</table>

<script type="text/javascript">
  <!--
  // Private objects are initially displayed (because if
  // javascript is turned off then we want them to be
  // visible); but by default, we want to hide them.  So hide
  // them unless we have a cookie that says to show them.
  checkCookie();
  // -->
</script>
</body>
</html>
